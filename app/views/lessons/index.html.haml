-# Show 2 different views depending on whether Student or Teacher
-#  Teacher views Summary of all past lessons that need follow up.
-#  Student views Notes from teacher and mark as read.

.ui.large.modal#new_lesson_modal(style="display: none;")

-# STUDENT view (cards showing teacher's notes for them)
- if !current_user.admin
  .ui.grid.container.stackable.centered
    .twelve.wide.column


      %h1 Notes
      %h3
        From your teacher with
        %i.heart.icon .

      .ui.three.column.grid
        - @lessons.each do |lesson|
          .column
            .ui.fluid.card
              .content
                .header
                  Class on
                  = lesson.start_time.to_formatted_s(:short)
                .meta
                  = time_ago_in_words(lesson.updated_at)
                  ago
                .description
                  %p= lesson.student_notes
              .ui.bottom
                = link_to "Mark as read", mark_as_read_path(lesson), remote: true, method: :put, class: "ui button attached green"


- elsif current_user.admin
  -# TEACHER view (after-lesson administrative dashboard)
  .ui.container.stackable.grid.centered

    .twelve.wide.column
      %h1 Post-mortem

      %h3 After-class follow up
      %p Mark attendance, give feedback to students and leave notes-to-self

      %table.ui.table.yellow
        %thead
          %tr
            %th Lesson details
            %th Attendance
            %th Notes to Student
            %th Private notes
            %th.center.aligned Manage
        %tbody
          - @lessons_to_debrief.each do |lesson|
            %tr
              %td
                %h4.ui.image.header
                  = image_tag lesson.user.profile_pic_url, class: "ui mini rounded image", style: "border-radius: 99em;"
                  .content
                    = User.find(lesson.user_id).name
                    .sub.header
                      on
                      = lesson.start_time.to_formatted_s(:short)
              %td
                - if lesson.attended == nil
                  not marked yet
                - elsif lesson.attended
                  Attended
                - elsif !lesson.attended
                  Missed
              %td
                = lesson.student_notes || "no feedback yet"
              %td
                = lesson.private_notes
              %td.ui.selectable.two.wide.center.aligned
                = link_to edit_lesson_path(lesson), remote: true, "data-toggle" => "modal", "data-target" => "lesson_modal" do
                  %i.edit.icon




      -# Accounting flags
      %h3 Accounting flags
      %p Follow up with students with outstanding fees

      %table.ui.table.red
        %thead
          %tr
            %th Lesson with
            %th Date
            %th Paid fees?
            %th.center.aligned Manage
        %tbody
          - @lessons_not_paid.each do |lesson|
            %tr
              %td
                %h4.ui.image.header
                  = image_tag lesson.user.profile_pic_url, class: "ui mini rounded image", style: "border-radius: 99em;"
                  .content
                    = User.find(lesson.user_id).name
              %td
                = lesson.start_time.to_formatted_s(:short)
              %td
                - if lesson.paid
                  Yes
                - elsif !lesson.paid
                  No
              %td.ui.selectable.two.wide.center.aligned
                = link_to edit_lesson_path(lesson), remote: true, "data-toggle" => "modal", "data-target" => "lesson_modal" do
                  %i.edit.icon

      -# Closed cases
      %h3 Recently closed cases
      %p Showing lessons up to 1 month ago

      %table.ui.table.teal
        %thead
          %tr
            %th Lesson with
            %th Date
            %th Notes to Student
            %th Private notes
            %th Paid fees?
            %th.center.aligned Manage
        %tbody
          - @lessons_completed.each do |lesson|
            %tr
              %td.three.wide
                %h4.ui.image.header
                  = image_tag lesson.user.profile_pic_url, class: "ui mini rounded image", style: "border-radius: 99em;"
                  .content
                    = User.find(lesson.user_id).name
              %td
                = lesson.start_time.to_formatted_s(:short)
              %td.four.wide
                = lesson.student_notes
              %td.four.wide
                = lesson.private_notes
              %td
                - if lesson.paid
                  Yes
                - elsif !lesson.paid
                  No
              %td.ui.selectable.two.wide.center.aligned
                = link_to edit_lesson_path(lesson), remote: true, "data-toggle" => "modal", "data-target" => "lesson_modal" do
                  %i.edit.icon
